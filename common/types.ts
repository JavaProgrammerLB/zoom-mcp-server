import { z } from "zod";

export const TokenSchema = z.object({
  access_token: z.string(),
  token_type: z.string(),
  expires_in: z.number(),
  scope: z.string(),
  api_url: z.string(),
});

export const ZoomMeetingSettingsSchema = z.object({
  host_video: z.boolean(),
  participant_video: z.boolean(),
  cn_meeting: z.boolean(),
  in_meeting: z.boolean(),
  join_before_host: z.boolean(),
  jbh_time: z.number(),
  mute_upon_entry: z.boolean(),
  watermark: z.boolean(),
  use_pmi: z.boolean(),
  approval_type: z.number(),
  audio: z.string(),
  auto_recording: z.string(),
  enforce_login: z.boolean(),
  enforce_login_domains: z.string(),
  alternative_hosts: z.string(),
  alternative_host_update_polls: z.boolean(),
  close_registration: z.boolean(),
  show_share_button: z.boolean(),
  allow_multiple_devices: z.boolean(),
  registrants_confirmation_email: z.boolean(),
  waiting_room: z.boolean(),
  request_permission_to_unmute_participants: z.boolean(),
  registrants_email_notification: z.boolean(),
  meeting_authentication: z.boolean(),
  encryption_type: z.string(),
  approved_or_denied_countries_or_regions: z.object({
    enable: z.boolean(),
  }),
  breakout_room: z.object({
    enable: z.boolean(),
  }),
  internal_meeting: z.boolean(),
  continuous_meeting_chat: z.object({
    enable: z.boolean(),
    auto_add_invited_external_users: z.boolean(),
    auto_add_meeting_participants: z.boolean(),
    channel_id: z.string(),
  }),
  participant_focused_meeting: z.boolean(),
  push_change_to_calendar: z.boolean(),
  resources: z.array(z.unknown()),
  allow_host_control_participant_mute_state: z.boolean(),
  alternative_hosts_email_notification: z.boolean(),
  show_join_info: z.boolean(),
  device_testing: z.boolean(),
  focus_mode: z.boolean(),
  meeting_invitees: z.array(z.unknown()),
  private_meeting: z.boolean(),
  email_notification: z.boolean(),
  host_save_video_order: z.boolean(),
  sign_language_interpretation: z.object({
    enable: z.boolean(),
  }),
  email_in_attendee_report: z.boolean(),
});

export const ZoomMeetingSchema = z.object({
  uuid: z.string(),
  id: z.number(),
  host_id: z.string(),
  host_email: z.string(),
  topic: z.string(),
  type: z.number(),
  status: z.string(),
  start_time: z.string(),
  duration: z.number(),
  timezone: z.string(),
  agenda: z.string(),
  created_at: z.string(),
  start_url: z.string(),
  join_url: z.string(),
  password: z.string(),
  h323_password: z.string(),
  pstn_password: z.string(),
  encrypted_password: z.string(),
  settings: ZoomMeetingSettingsSchema,
  supportGoLive: z.boolean(),
  creation_source: z.string(),
  pre_schedule: z.boolean(),
});

export const ZoomListMeetingsSchema = z.object({
  page_size: z.number(),
  total_records: z.number(),
  next_page_token: z.string(),
  meetings: z.array(
    z.object({
      uuid: z.string(),
      id: z.number(),
      host_id: z.string(),
      topic: z.string(),
      type: z.number(),
      start_time: z.string(),
      duration: z.number(),
      timezone: z.string(),
      agenda: z.string(),
      created_at: z.string(),
      join_url: z.string(),
      supportGoLive: z.boolean(),
    }),
  ),
});
